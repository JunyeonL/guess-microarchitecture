
#include "config.h"

#ifndef __STORE_BUFFER__
#define __STORE_BUFFER__

#define STORE1	START LOOP {ASM_PREFIX MOVQ(0) NOP500 ASM_SUFFIX} END(1)
#define STORE2	START LOOP {ASM_PREFIX MOVQ2(0) NOP500 ASM_SUFFIX} END(2)
#define STORE3	START LOOP {ASM_PREFIX MOVQ3(0) NOP500 ASM_SUFFIX} END(3)
#define STORE4	START LOOP {ASM_PREFIX MOVQ4(0) NOP500 ASM_SUFFIX} END(4)
#define STORE5	START LOOP {ASM_PREFIX MOVQ5(0) NOP500 ASM_SUFFIX} END(5)
#define STORE6	START LOOP {ASM_PREFIX MOVQ6(0) NOP500 ASM_SUFFIX} END(6)
#define STORE7	START LOOP {ASM_PREFIX MOVQ7(0) NOP500 ASM_SUFFIX} END(7)
#define STORE8	START LOOP {ASM_PREFIX MOVQ8(0) NOP500 ASM_SUFFIX} END(8)
#define STORE9	START LOOP {ASM_PREFIX MOVQ9(0) NOP500 ASM_SUFFIX} END(9)
#define STORE10 START LOOP {ASM_PREFIX MOVQ10(0) NOP500 ASM_SUFFIX} END(10)

#define STORE11 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ(10) NOP500 ASM_SUFFIX} END(11)
#define STORE12 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ2(10) NOP500 ASM_SUFFIX} END(12)
#define STORE13 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ3(10) NOP500 ASM_SUFFIX} END(13)
#define STORE14 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ4(10) NOP500 ASM_SUFFIX} END(14)
#define STORE15 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ5(10) NOP500 ASM_SUFFIX} END(15)
#define STORE16 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ6(10) NOP500 ASM_SUFFIX} END(16)
#define STORE17 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ7(10) NOP500 ASM_SUFFIX} END(17)
#define STORE18 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ8(10) NOP500 ASM_SUFFIX} END(18)
#define STORE19 START LOOP {ASM_PREFIX MOVQ10(0) MOVQ9(10) NOP500 ASM_SUFFIX} END(19)
#define STORE20 START LOOP {ASM_PREFIX MOVQ20(0) NOP500 ASM_SUFFIX} END(20)

#define STORE21 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ(20) NOP500 ASM_SUFFIX} END(21)
#define STORE22 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ2(20) NOP500 ASM_SUFFIX} END(22)
#define STORE23 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ3(20) NOP500 ASM_SUFFIX} END(23)
#define STORE24 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ4(20) NOP500 ASM_SUFFIX} END(24)
#define STORE25 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ5(20) NOP500 ASM_SUFFIX} END(25)
#define STORE26 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ6(20) NOP500 ASM_SUFFIX} END(26)
#define STORE27 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ7(20) NOP500 ASM_SUFFIX} END(27)
#define STORE28 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ8(20) NOP500 ASM_SUFFIX} END(28)
#define STORE29 START LOOP {ASM_PREFIX MOVQ20(0) MOVQ9(20) NOP500 ASM_SUFFIX} END(29)
#define STORE30 START LOOP {ASM_PREFIX MOVQ30(0) NOP500 ASM_SUFFIX} END(30)

#define STORE31 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ(30) NOP500 ASM_SUFFIX} END(31)
#define STORE32 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ2(30) NOP500 ASM_SUFFIX} END(32)
#define STORE33 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ3(30) NOP500 ASM_SUFFIX} END(33)
#define STORE34 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ4(30) NOP500 ASM_SUFFIX} END(34)
#define STORE35 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ5(30) NOP500 ASM_SUFFIX} END(35)
#define STORE36 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ6(30) NOP500 ASM_SUFFIX} END(36)
#define STORE37 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ7(30) NOP500 ASM_SUFFIX} END(37)
#define STORE38 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ8(30) NOP500 ASM_SUFFIX} END(38)
#define STORE39 START LOOP {ASM_PREFIX MOVQ30(0) MOVQ9(30) NOP500 ASM_SUFFIX} END(39)
#define STORE40 START LOOP {ASM_PREFIX MOVQ40(0) NOP500 ASM_SUFFIX} END(40)

#define STORE41 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ(40) NOP500 ASM_SUFFIX} END(41)
#define STORE42 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ2(40) NOP500 ASM_SUFFIX} END(42)
#define STORE43 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ3(40) NOP500 ASM_SUFFIX} END(43)
#define STORE44 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ4(40) NOP500 ASM_SUFFIX} END(44)
#define STORE45 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ5(40) NOP500 ASM_SUFFIX} END(45)
#define STORE46 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ6(40) NOP500 ASM_SUFFIX} END(46)
#define STORE47 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ7(40) NOP500 ASM_SUFFIX} END(47)
#define STORE48 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ8(40) NOP500 ASM_SUFFIX} END(48)
#define STORE49 START LOOP {ASM_PREFIX MOVQ40(0) MOVQ9(40) NOP500 ASM_SUFFIX} END(49)
#define STORE50 START LOOP {ASM_PREFIX MOVQ50(0) NOP500 ASM_SUFFIX} END(50)

#define STORE51 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ(50) NOP500 ASM_SUFFIX} END(51)
#define STORE52 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ2(50) NOP500 ASM_SUFFIX} END(52)
#define STORE53 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ3(50) NOP500 ASM_SUFFIX} END(53)
#define STORE54 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ4(50) NOP500 ASM_SUFFIX} END(54)
#define STORE55 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ5(50) NOP500 ASM_SUFFIX} END(55)
#define STORE56 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ6(50) NOP500 ASM_SUFFIX} END(56)
#define STORE57 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ7(50) NOP500 ASM_SUFFIX} END(57)
#define STORE58 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ8(50) NOP500 ASM_SUFFIX} END(58)
#define STORE59 START LOOP {ASM_PREFIX MOVQ50(0) MOVQ9(50) NOP500 ASM_SUFFIX} END(59)
#define STORE60 START LOOP {ASM_PREFIX MOVQ60(0) NOP500 ASM_SUFFIX} END(60)

#define STORE61 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ(60) NOP500 ASM_SUFFIX} END(61)
#define STORE62 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ2(60) NOP500 ASM_SUFFIX} END(62)
#define STORE63 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ3(60) NOP500 ASM_SUFFIX} END(63)
#define STORE64 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ4(60) NOP500 ASM_SUFFIX} END(64)
#define STORE65 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ5(60) NOP500 ASM_SUFFIX} END(65)
#define STORE66 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ6(60) NOP500 ASM_SUFFIX} END(66)
#define STORE67 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ7(60) NOP500 ASM_SUFFIX} END(67)
#define STORE68 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ8(60) NOP500 ASM_SUFFIX} END(68)
#define STORE69 START LOOP {ASM_PREFIX MOVQ60(0) MOVQ9(60) NOP500 ASM_SUFFIX} END(69)
#define STORE70 START LOOP {ASM_PREFIX MOVQ70(0) NOP500 ASM_SUFFIX} END(70)

#define START MFENCE start = timestamp();
#define LOOP for(i = 0; i < numTrials; i++)
#define ASM_PREFIX __asm__ __volatile__ (
#define ASM_SUFFIX :: "m"(*p) : "memory", "%eax" );

#if CACHE_DEBUG
//#define END(a) gap = timestamp() - start; buf[a] = gap/numTrials;
#define END(a) gap = timestamp() - start; printf("%02d\t%lf\n", a, gap/numTrials); buf[a] = gap/numTrials;
#else
#define END(a) gap = timestamp() - start; buf[a] = gap/numTrials;
#endif

#define MOVQ(a)     "movq $"#a", 0%0 \n\t"
#define MOVQ2(a)	MOVQ(a) MOVQ(a+1)
#define MOVQ3(a)	MOVQ(a) MOVQ2(a+1)
#define MOVQ4(a)	MOVQ(a) MOVQ3(a+1)
#define MOVQ5(a)	MOVQ(a) MOVQ4(a+1)
#define MOVQ6(a)	MOVQ(a) MOVQ5(a+1)
#define MOVQ7(a)	MOVQ(a) MOVQ6(a+1)
#define MOVQ8(a)	MOVQ(a) MOVQ7(a+1)
#define MOVQ9(a)	MOVQ(a) MOVQ8(a+1)
#define MOVQ10(a)	MOVQ5(a) MOVQ5(a+5)
#define MOVQ20(a)	MOVQ10(a) MOVQ10(a+10)
#define MOVQ30(a)	MOVQ10(a) MOVQ20(a+10)
#define MOVQ40(a)	MOVQ20(a) MOVQ20(a+20)
#define MOVQ50(a)	MOVQ20(a) MOVQ20(a+20) MOVQ10(a+40)
#define MOVQ60(a)	MOVQ50(a) MOVQ10(a+50)
#define MOVQ70(a)	MOVQ50(a) MOVQ20(a+50)

#define MFENCE		ASM_PREFIX "mfence\n\t" ASM_SUFFIX

#define NOP			"nop\n\t"
#define NOP10		NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP
#define NOP50		NOP10 NOP10 NOP10 NOP10 NOP10
#define NOP100		NOP50 NOP50
#define NOP500		NOP100 NOP100 NOP100 NOP100 NOP100

int store_buffer(int iter);

#endif /* __STORE_BUFFER__ */
